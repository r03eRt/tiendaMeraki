<?php
class SEUR_frm_Config { public $sClassName = 'SEUR_admin' ; public $sPageSlug   = 'seur_configuracion' ; public $sTabSecID    = 'SEUR_Config' ; public function __construct( $sClassName='', $sPageSlug='', $sTabSecID='' ) { $this->sClassName   = $sClassName ? $sClassName : $this->sClassName ; $this->sPageSlug    = $sPageSlug ? $sPageSlug : $this->sPageSlug ; $this->sTabSecID     = $sTabSecID ? $sTabSecID : $this->sTabSecID ; add_action( 'load_' . $this->sPageSlug, array( $this, 'Load_Event' ) ) ; add_action( 'do_' . $this->sPageSlug , array( $this, 'Do_Event' ) ) ; return $this ;  } public function Load_Event( $oAdminPage ) { $oAdminPage->addSettingSections( $this->sPageSlug , array ( 'section_id'    	=> 'direccion' , 'section_tab_slug'  => 'tabbed_config_1' , 'title'        		=> __( 'Datos de empresa', 'seur' ) , 'description'  		=> __( 'Incluya los datos de cliente de SEUR.', 'seur' ) , ) , array ( 'section_id'    	=> 'contacto' , 'section_tab_slug'  => 'tabbed_config_1' , 'title'        		=> __( 'Datos de contacto', 'seur' ) , 'description'  		=> __( 'Incluya los datos de contacto con SEUR.', 'seur' ) , ) , array ( 'section_id'    	=> 'acceso' , 'section_tab_slug'  => 'tabbed_config_1' , 'title'        		=> __( 'Datos de acceso', 'seur' ) , 'description'  		=> __( 'Incluya los datos de acceso a SEUR.', 'seur') . '<br>' . __('Tenga en cuenta que los campos de usuario y contraseña son sensibles a mayúsculas y minúsculas.', 'seur' ) , ) , array ( 'section_id'    	=> 'avisos' , 'section_tab_slug'  => 'tabbed_config_1' , 'title'        		=> __( 'Servicio de avisos', 'seur' ) , 'description'  		=> __( 'Active los servicios de aviso que desee.', 'seur' ) , ) , array ( 'section_id'    	=> 'recogidas' , 'section_tab_slug'  => 'tabbed_config_1' , 'title'        		=> __( 'Servicio de recogidas', 'seur' ) , 'description'  		=> 	__( 'Introduzca un horario para la Recogida, formato HH:MM','seur') . '<br>' . __( 'Si el horario es sólo de Mañanas deje vacios los horarios de Tarde.','seur') . '<br>' . __( 'Si el horario es sólo de Tardes deje vacios los horarios de Mañana.','seur') . '<br>' . __('El margen mínimo entre cada horario es de 2 horas.', 'seur' ) . '<hr>' , ) , array ( 'section_id'    	=> 'servicios' , 'section_tab_slug'  => 'tabbed_config_1' , 'title'        		=> __( 'Datos de servicios', 'seur' ) , 'description'  		=> __( 'Incluya los datos de servicio en SEUR.', 'seur' ) , ) , array ( 'section_id'    	=> 'woocommerce' , 'section_tab_slug'  => 'tabbed_config_1' , 'title'        		=> __( 'Datos de woocommerce', 'seur' ) , 'description'  		=> __( 'Configuraciones de integración con Woocommerce.', 'seur' ) ,  ) ) ; $oAdminPage->addSettingFields('direccion' , array ( 'field_id'      => 'nif' , 'title'         => __( 'NIF', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'empresa' , 'title'         => __( 'Empresa', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'tipo_via' , 'title'         => __( 'Tipo de via', 'seur' ) , 'type'          => 'select2' , 'is_multiple'   => false , 'label'         => SEUR()->SOAP->Tipo_via , 'default'		=> 'CL' , 'attributes'        => array ( 'field' => array ( 'style' => 'min-width:;170px;' , ) , ) , ) , array ( 'field_id'      => 'nombre_via' , 'title'         => __( 'Nombre de via', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'numero_via' , 'title'         => __( 'Número de via', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'escalera' , 'title'         => __( 'Escalera', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'piso' , 'title'         => __( 'Piso', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'puerta' , 'title'         => __( 'Puerta', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'codigo_postal' , 'title'         => __( 'Código postal', 'seur' ) , 'type'          => 'number' , ) , array ( 'field_id'      => 'poblacion' , 'title'         => __( 'Población', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'provincia' , 'title'         => __( 'Provincia', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'pais' , 'title'         => __( 'Pais', 'seur' ) , 'type'          => 'text' ,  ) ) ; $oAdminPage->addSettingFields('contacto' , array ( 'field_id'      => 'nombre' , 'title'         => __( 'Nombre', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'apellidos' , 'title'         => __( 'Apellidos', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'telefono' , 'title'         => __( 'Teléfono', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'email' , 'title'         => __( 'eMail', 'seur' ) , 'type'          => 'text' ,  ) ) ; $oAdminPage->addSettingFields( 'acceso' , array ( 'field_id'      => 'codigo_cit' , 'title'         => __( 'Código CIT', 'seur' ) , 'type'          => 'number' , ) , array ( 'field_id'      => 'usuario_cit' , 'title'         => __( 'Usuario CIT', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'clave_cit' , 'title'         => __( 'Contraseña CIT', 'seur' ) , 'type'          => 'password' , 'description' => 'Introduzca su clave de acceso por duplicado para confirmación.' , array ( 'field_id'      => 'clave_cit' ,  ) ) , array ( 'field_id'      => 'codigo_ccc' , 'title'         => __( 'Código CCC', 'seur' ) , 'type'          => 'number' , ) , array ( 'field_id'      => 'franquicia' , 'title'         => __( 'Franquicia', 'seur' ) , 'type'          => 'number' , ) , array ( 'field_id'      => 'user_seur' , 'title'         => __( 'Usuario SEUR.com', 'seur' ) , 'type'          => 'text' , ) , array ( 'field_id'      => 'clave_user_seur' , 'title'         => __( 'Contraseña SEUR.com', 'seur' ) , 'type'          => 'password' , 'description' => 'Introduzca su clave de acceso por duplicado para confirmación.' , array ( 'field_id'      => 'clave_user_seur' ,  )  ) ) ; $oAdminPage->addSettingFields( 'avisos' , array ( 'field_id'      => 'preaviso' , 'title'         => __( 'Preaviso', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('S' => 'Sí', 'N' => 'No') , 'default'		=> 'S' , 'description'	=> __('Se le notificará al cliente que el paquete esta en posesión de la agencia.','seur' ) ) , array ( 'field_id'      => 'reparto' , 'title'         => __( 'Reparto', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('S' => 'Sí', 'N' => 'No') , 'default'		=> 'S' , 'description'	=> __('Se le notificará al cliente que el paquete esta en reparto.','seur' ) ) , array ( 'field_id'      => 'notificar_email' , 'title'         => __( 'Notificar por eMail', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('S' => 'Sí', 'N' => 'No') , 'default'		=> 'S' , 'description'	=> __('Notificar mediante el envío de un eMail al correo del cliente.','seur' ) ) , array ( 'field_id'      => 'Notificar_sms' , 'title'         => __( 'Notificar por SMS', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('S' => 'Sí', 'N' => 'No') , 'default'		=> 'N' , 'description'	=> __('Notificar mediante el envío de un SMS al teléfono del cliente.','seur' )  ) ) ; $oAdminPage->addSettingFields( 'recogidas' , array ( 'field_id'      => 'maniana_def' , 'title'         => __( 'Mañana', 'seur' ) , 'type'          => 'text' , 'label'	=> __('Desde:','seur') , array ( 'type'          => 'text' , 'label'	=> __('Hasta:','seur') , ) , 'description'	=> __('Horario de recogida por las mañanas, desde que hora hasta que hora','seur') . '<hr>' )  , array ( 'field_id'      => 'tarde_def' , 'title'         => __( 'Tarde', 'seur' ) , 'type'          => 'text' , 'label'	=> __('Desde:','seur') , array ( 'type'          => 'text' , 'label'	=> __('Hasta:','seur') , ) , 'description'	=> __('Horario de recogida por las tardes, desde que hora hasta que hora','seur'). '<hr>' ) ) ; $oAdminPage->addSettingFields( 'servicios' , array ( 'field_id'      => 'nacional' , 'title'         => __( 'España y Portugal', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => SEUR()->SOAP->Envios_array(1) , 'default'		=> '31-2' , ) , array ( 'field_id'      => 'canarias' , 'title'         => __( 'España - Canarias', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => SEUR()->SOAP->Envios_array(2) , 'default'		=> '13-2' , ) , array ( 'field_id'      => 'internacional' , 'title'         => __( 'Internacional', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => SEUR()->SOAP->Envios_array(3) , 'default'		=> '77-104' , ) , array ( 'field_id'      => 'tipo_etiqueta' , 'title'         => __( 'Tipo de etiqueta', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('PDF' => 'PDF', 'TERMICA' => 'TERMICA') , 'default'		=> 'PDF' , ) , array ( 'field_id'      => 'aduana_origen' , 'title'         => __( 'Aduana origen', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('F' => 'Pagada', 'D' => 'Debida') , 'default'		=> 'F' , ) , array ( 'field_id'      => 'aduana_destino' , 'title'         => __( 'Aduana destino', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('F' => 'Pagada', 'D' => 'Debida') , 'default'		=> 'F' , ) , array ( 'field_id'      => 'Tipo_mercancia' , 'title'         => __( 'Tipo de mercancia', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('C' => 'Comercial', 'N' => 'No comercial') , 'default'		=> 'C' , ) , array ( 'field_id'      => 'valor_declarado_defecto' , 'title'         => __( 'Valor declarado defecto', 'seur' ) , 'type'          => 'number' , 'default'		=> 1 , 'attributes'    => array ( 'min'   => 1 , 'step'  => 0.01 , ) , ) , array ( 'field_id'      => 'id_mercancia_internacional' , 'title'         => __( 'Id mercancia internacional', 'seur' ) , 'type'          => 'text' , 'default'		=> '400' , ) , array ( 'field_id'      => 'descripcion_internacional' , 'title'         => __( 'Descripción internacional', 'seur' ) , 'type'          => 'text' , 'default'		=> 'MANUFACTURAS DIVERSAS' , 'attributes'    => array ( 'size' => 40 ,  )  ) ) ; $order_statuses['none'] = __('No hacer nada.','seur') ; $order_statuses += wc_get_order_statuses() ; $oAdminPage->addSettingFields( 'woocommerce' , array ( 'field_id'      => 'estados_crea_envio' , 'title'         => __( 'Crear envios', 'seur' ) , 'type'          => 'select2' , 'is_multiple'   => true , 'label'         => wc_get_order_statuses() , 'default'		=> array('0' => 'wc-seur_paqueteria') , 'description' 	=> __( 'Seleccione los estados de pedido en los cuales se podrán crear envíos', 'seur') . '<HR>' , ) , array ( 'field_id'      => 'estados_sincroniza' , 'title'         => __( 'Sincronizar', 'seur' ) , 'type'          => 'select2' , 'is_multiple'   => true , 'default'		=> array('0' => 'wc-seur_esperando', '1' => 'wc-seur_transito') , 'label'         => wc_get_order_statuses() , 'description' => __( 'Seleccione los estados de pedido en los cuales se buscará el estado en el que está el envío.', 'seur' ) . '<HR>' , ) , array ( 'field_id'      => 'estados_ver_seguimiento' , 'title'         => __( 'Ver seguimiento', 'seur' ) , 'type'          => 'select2' , 'is_multiple'   => true , 'default'		=> array('0' => 'wc-seur_esperando', '1' => 'wc-seur_transito', '2' => 'wc-seur_entregado', '3' => 'wc-completed', '4' => 'wc-refunded' ) , 'label'         => wc_get_order_statuses() , 'description' => __( 'Seleccione los estados de pedido en los cuales se enseñará el seguimiento del envío.', 'seur' ) . '<HR>' ,  ) ) ; do_action ( 'SEUR_menu_config' , $oAdminPage ) ; add_filter( 'validation_' . $this->sPageSlug, array( $this, 'Validate' ), 10, 3  ) ;  } public function Do_Event ($content) { return submit_button() . $content ;  } public function Validate( $aInput, $aOldInput, $oFactory) { $_fIsValid = true ; $_aErrors = array() ; $_return_old_inputs = false ; $rev_campos ='' ; if( $aInput['direccion']['nif'] == '' || SEUR()->API->valida_nif($aInput['direccion']['nif']) == false ) { $rev_campos .= '<br>NIF de la empresa - No se ha introducido o el formato es incorrecto.' ; $_aErrors['direccion']['nif'] = __( 'El número de identificación fiscal no es valido. el formato debe ser A12345678 o 12345678A', 'seur' ) ; $_fIsValid = false ;  } if($aInput['direccion']['tipo_via'] == '') { $_aErrors[ 'direccion' ][ 'tipo_via' ] = __( 'Tiene que indicar un tipo de via.', 'seur' ) ; $rev_campos .= '<br>Tipo de via - No se ha introducido.' ; $_fIsValid = false ;  } if($aInput['direccion']['nombre_via'] == '') { $_aErrors[ 'direccion' ][ 'nombre_via' ] = __( 'Tiene que indicar un nombre de via.', 'seur' ) ; $rev_campos .= '<br>Dirección - No se ha introducido.' ; $_fIsValid = false ;  } if($aInput['direccion']['numero_via'] == '') { $_aErrors[ 'direccion' ][ 'numero_via' ] = __( 'Tiene que indicar un número de via.', 'seur' ) ; $rev_campos .= '<br>Número de via - No se ha introducido.' ; $_fIsValid = false ;  } if($aInput['direccion']['empresa'] == '') { $_aErrors[ 'direccion' ][ 'empresa' ] = __( 'Tiene que indicar un nombre de empresa.', 'seur' ) ; $rev_campos .= '<br>Nombre de empresa - No se ha introducido.' ; $_fIsValid = false ;  } if($aInput['direccion']['codigo_postal'] == '') { $_aErrors['direccion']['codigo_postal'] = __( 'Tiene que indicar un número de codigo postal.', 'seur' ) ; $rev_campos .= '<br>Código postal - No se ha introducido.' ; $_fIsValid = false ;  } $aInput['contacto']['email'] = trim($aInput['contacto']['email']) ; if($aInput['contacto']['email'] == '' ) { $_aErrors['contacto']['email'] = __( 'Debe introducir un email de contacto.', 'seur' ) ; $rev_campos .= '<br>Email de contacto - Debe introducir un email de contacto.' ; $_fIsValid = false ; } else if( !SEUR()->API->valida_email($aInput['contacto']['email'])  ) { $_aErrors['contacto']['email'] = __( 'Se ha detectado un dominio de email no accesible o un formato incorrecto, verifique que la dirección de correo es correcta.', 'seur' ) ; $rev_campos .= '<br>Email de contacto - Verificación de email fallida.' ; $_fIsValid = false ;  } if($aInput['acceso']['clave_cit'][0] != $aInput['acceso']['clave_cit'][1]) { $_aErrors['acceso']['clave_cit'] = __( 'La comprovación de contraseña CIT no ha sido correcta, introduzca de nuevo la contraseña en los dos campos.', 'seur' ) ; $rev_campos .= '<br>Contraseña CIT - Las dos contraseñas no concuerdan.' ; $_fIsValid = false ;  } if($aInput['acceso']['clave_user_seur'][0] != $aInput['acceso']['clave_user_seur'][1]) { $_aErrors['acceso']['clave_user_seur'] = __( 'La comprovación de contraseña CIT no ha sido correcta, introduzca de nuevo la contraseña en los dos campos.', 'seur' ) ; $rev_campos .= '<br>Contraseña SEUR - Las dos contraseñas no concuerdan.' ; $_fIsValid = false ;  } if ( !$_fIsValid ) { $oFactory->setFieldErrors( $_aErrors ) ; $oFactory->setSettingNotice( SEUR()->API->div_class ( __( 'Se han producido errores en la introducción de datos, por favor, revise los datos introducidos en:', 'seur' ) ) . $rev_campos ,  'SEUR_Error' ) ; $aInput['config_ok']= false ; if($_return_old_inputs) return $aOldInput ; }  else { $aInput['config_ok']= true ;  } return $aInput ;  }  } new SEUR_frm_Config() ; ?>
