<?php
class SEUR_Orders_Metabox extends SEUR_AdminPageFramework_MetaBox { public $pedido ; public $Estado_MB ; public function setUp() { $Creando = false ; $Actualizado = '' ; $Seguimiento = '' ; if(isset($_GET['post']) && SEUR()->API->getOption('config_ok') != false ) { $this->pedido = SEUR()->API->getOrder($_GET['post']) ; if ( version_compare( WC_VERSION, '2.7', '<' ) ) $pedido_id = $this->pedido->id ; else
$pedido_id = $this->pedido->get_id() ; $this->Estado_MB = SEUR()->API->get_estado_envio($pedido_id) ; switch($this->Estado_MB) { case 'pidiendo_datos' : $datos['valido'] = true ; $datos['email_cliente'] = property_exists($this->pedido, '_shipping_email') ? $this->pedido->_shipping_email : $this->pedido->_billing_email ; $datos['telef_cliente'] = property_exists($this->pedido, '_shipping_phone') ? $this->pedido->_shipping_phone : $this->pedido->_billing_phone ; $envio = '<b>' . __('Nombre','seur') . ':</b> ' .  $this->pedido->_shipping_first_name . '<br>' ; $envio .= '<b>' . __('Apellidos','seur') . ':</b> ' .  $this->pedido->_shipping_last_name . '<br>' ; $envio .= '<b>' . __('Empresa','seur') . ':</b> ' .  $this->pedido->_shipping_company . '<br>' ; $envio .= '<b>' . __('Dirección','seur') . ':</b> ' .  $this->pedido->_shipping_address_1 . ' ' . $this->pedido->_shipping_address_2 . '<br>' ; $envio .= '<b>' . __('Código postal','seur') . ':</b> ' .  $this->pedido->_shipping_postcode . '<br>' ; $envio .= '<b>' . __('Ciudad','seur') . ':</b> ' .  $this->pedido->_shipping_city . '<br>' ; $envio .= '<b>' . __('Pais','seur') . ':</b> ' .  $this->pedido->_shipping_country . '<br>' ; $envio .= '<b>' . __('eMail','seur') . ':</b> ' .  $datos['email_cliente'] . '<br>' ; $envio .= '<b>' . __('Teléfono','seur') . ':</b> ' .  $datos['telef_cliente'] . '<hr>' ; $Seur_envio = '' ; $Seur_datos = '' ; if ( property_exists( $this->pedido, 'SEUR_envio' ) ) $Seur_envio = json_encode($this->pedido->SEUR_envio) ; if ( property_exists( $this->pedido, 'pidiendo_datos' ) ) $Seur_datos = json_encode($this->pedido->pidiendo_datos) ; $firma = md5( $envio .  $Seur_envio . $Seur_datos ) ; $key = 'Tarifa_Metabox_' . $pedido_id ; if ( false === ( $check = SEUR()->API->getTransient( $key ) )  ||  $firma != $check['firma_md5' ] ) { $envio = '<p style="text-align: center;color: green;"><b> >> ' . __('Datos actualizados','seur') . ' << </b></p><hr>' . $envio ; $check['msg'] = '' ; $datos['key_tipo_envio'] = 'nacional' ; $check['cargos_aduanas'] = false ; $check['get_entrega_sabado'] = false ; $check['entrega_sabado'] = array('N'=> 'No') ; $check['tipo_cargo_portes'] = array('F' => 'Pagados', 'D' => 'Debidos') ; $check['tipos_reembolso'] = array('N'=> 'Sin reembolso') ; if ( in_array( $this->pedido->_shipping_country, array("ES","PT","AD") )) { if( false === ( $datos["Franquicia_Destino"] = SEUR()->SOAP->VerificarPoblacion( $this->pedido->_shipping_city , $this->pedido->_shipping_postcode)) ) { $check['msg'] .= SEUR()->API->div_class( __('Código postal o población en dirección de envío inválido.', 'seur') , 'SEUR_Error')  . '<hr>' ; $check['msg'] = apply_filters( 'SEUR_Nomenclator_Metabox' , $check['msg'] , $this->pedido ) ; $datos['valido'] = false ; } else { if (  in_array( $datos["Franquicia_Destino"], array( "74", "77", "56") ) ) { $datos['key_tipo_envio'] = 'nacional' ; $check['cargos_aduanas'] = true ; } else if (in_array( $datos["Franquicia_Destino"], array( "35", "38", "52", "60", "70")) ) { $datos['key_tipo_envio'] = 'canarias' ; $check['cargos_aduanas'] = true ; } else { $datos['key_tipo_envio'] = 'nacional' ;  } if ( $this->pedido->_payment_method == 'cod') { $check['tipos_reembolso'] = array('N'=> 'Sin reembolso', 'F' => 'Pagado', 'D' => 'Debido') ;  }  } } else { $datos['key_tipo_envio'] = 'internacional' ; if( SEUR()->API->Is_European( $this->pedido->_shipping_country) ) { } else { $check['cargos_aduanas'] = true ; $datos['valido'] = false ; $check['msg'] .= SEUR()->API->div_class( 'Envíos internacionales fuera de la UE no están implementados, se implementarán lo más rapido posible.', 'SEUR_Error') ;  } $check['tipo_cargo_portes'] = array('F' => 'Pagados') ;  } if( $datos['valido'] ) { if( property_exists($this->pedido, 'pidiendo_datos' ) && isset($this->pedido->pidiendo_datos['Tarifa'])) { $Tarifa =  $this->pedido->pidiendo_datos['Tarifa'] ; } else { $Tarifa = SEUR()->API->getOption('servicios')[ $datos['key_tipo_envio'] ] ;  } $descripcion = SEUR()->SOAP->Get_Servicio_Producto_str( $Tarifa  ) ; $servicios = SEUR()->SOAP->Get_Servicio_Producto( $Tarifa  ) ; $datos['producto'] = $servicios[1] ; $datos['servicio'] = $servicios[0] ; $tarifa = '<b>Tarifa</b>: ' . SEUR()->API->div_class($descripcion) ; $datos['referencia'] = $pedido_id ; if ( $datos['key_tipo_envio'] == 'nacional' && date('N',current_time( 'timestamp' )) == 5 && ( $datos['servicio']=='3' || $datos['servicio']=='9' )) { $check['get_entrega_sabado'] = true ; $check['entrega_sabado'] = array('S'=> 'Sí', 'N'=> 'No') ;  } $check['msg'] .= apply_filters( 'SEUR_Tarifa_Metabox' , $tarifa , $this->pedido ) ;  } $this->pedido->SEUR_envio = $datos ; update_post_meta($pedido_id, 'SEUR_envio', $datos ) ; $check['firma_md5' ] = $firma ; $timetr = (24 - date('H', current_time( 'timestamp' ))) * 3600 ; SEUR()->API->setTransient( $key , $check , $timetr ) ; } else { $datos = $this->pedido->SEUR_envio ;  } $envio .= $check['msg'] ; break ; case 'imprime_etiqueta' : do_action ( 'SEUR_cambia_estado_pedido' , $pedido_id , 'crea_envio' ) ; $etiqueta = "<hr>" ; if ( $this->pedido->SEUR_envio['etiqueta_tipo'] == 'TERMICA' ) { $nombrefile = "etiqueta_seur_" . $pedido_id . ".txt" ; $ruta = SEUR()->BaseCache . $nombrefile ; $Cont_Etiqueta = $this->pedido->SEUR_envio['etiqueta'] ; if( $this->saveFile($ruta , $Cont_Etiqueta ) ) { $url = get_home_url() . '/wp-content/cache/seur/'. $nombrefile ; $etiqueta .=	'<a href="' . $url . '" download="' . $nombrefile . '">
<img style="width: 100%;max-width: 350px; border: 2px outset #ccc;" src="'. SEUR()->plugin_url .'assets/images/ecb.jpg"></img>
</a>' ; } else { $etiqueta .= 'No se pudo cargar la etiqueta.' ;  } } else { $nombrefile = "etiqueta_seur_" . $pedido_id . ".pdf" ; $ruta = SEUR()->BaseCache . $nombrefile ; $Cont_Etiqueta = base64_decode($this->pedido->SEUR_envio['etiqueta'] ) ; if( $this->saveFile($ruta , $Cont_Etiqueta ) ) { $url = get_home_url() . '/wp-content/cache/seur/'. $nombrefile ; if (SEUR()->API->getBrowser() == 'Google Chrome' && strpos(SEUR()->API->getPlatform(), 'Windows') !== FALSE ) { $etiqueta .= '	<script Language="javascript">
function ImprimeEtiquetaSEUR(elementId) { var getMyFrame = document.getElementById(elementId) ; getMyFrame.focus() ; getMyFrame.contentWindow.print() ;  } </script>' ; $etiqueta .= '<iframe id="Etiqueta_SEUR" src="'. $url .'" style="display: none;"></iframe>' ; $etiqueta .= '<img style="width: 100%;max-width: 350px; border:2px outset #ccc;" src="'. SEUR()->plugin_url .'assets/images/ecb.jpg" onclick="ImprimeEtiquetaSEUR(\'Etiqueta_SEUR\');"></img>' ; } else { $etiqueta .=	'<a href="' . $url . '" target="_blank">
<img style="width: 100%;max-width: 350px; border: 2px outset #ccc;" src="'. SEUR()->plugin_url .'assets/images/ecb.jpg"></img>
</a>' ;  } } else { $etiqueta .= 'No se pudo cargar la etiqueta.' ;  }  } break ; case 'hacer_seguimiento' : $albaran = '' ; $show_alba = false ; if( isset($this->pedido->SEUR['EXPEDICION_NUM'] ) ) { $Seguimiento = apply_filters( 'SEUR_Seguimiento_Metabox', SEUR()->API->get_estado_envio_str( $pedido_id ) , $this->pedido->SEUR ) ; if(isset($this->pedido->SEUR['FECHA_SYNCRO']) ) $Actualizado .=    __('Actualizado','seur') . ': '. date('H:i d-m-Y', strtotime($this->pedido->SEUR['FECHA_SYNCRO'])) . '<hr>' ; else 	
$Actualizado .=  '' ; if( in_array( SEUR()->SOAP->cod_estado_envio( $this->pedido->SEUR )  , SEUR()->SOAP->estados_entregado  ) ) { if(!isset($this->pedido->SEUR['albaran']) || is_array($this->pedido->SEUR['albaran'])) { $this->pedido->SEUR['albaran'] = SEUR()->SOAP->consultaAlbaranes ($this->pedido->SEUR['EXPEDICION_ID']) ; SEUR()->SOAP->update_envio( $pedido_id, $this->pedido->SEUR, false) ;  } if( isset($this->pedido->SEUR['albaran']) ) { if( isset($this->pedido->SEUR['albaran'][0])) { $img_alba = $this->pedido->SEUR['albaran'][0] ; $albaran = '<a href="data:image/png;base64,' . $img_alba . '" target="_blank">
<img style="width: 99%;box-shadow: 1px 1px 5px #999; max-width: 880px; border: 1px solid #999;" alt=Embedded Image src="data:image/png;base64,' . $img_alba . '" />
</a>' ; } else { $albaran = __('No existe albarán para este envío.', 'seur') ;  } $show_alba = true ;  }  } } else { $Seguimiento = SEUR()->API->get_estado_envio_str( $pedido_id, $this->Estado_MB); ;  } break ;  } } else { if( SEUR()->API->getOption('config_ok') == false ) $this->Estado_MB = 'solo_informar' ; else
$this->Estado_MB = 'creando_pedido_nuevo' ;  } $this->addSettingSections ( array ( 'section_id'        => 'pidiendo_datos' , 'title'             => __( 'Datos del pedido', 'seur' ) , 'description'       => __( 'Datos obtenidos para crear el envío.', 'seur' ) , 'if'				=> ( $this->Estado_MB == 'pidiendo_datos' ) ) , array ( 'section_id'        => 'solo_informar' , 'if'				=> ( $this->Estado_MB == 'solo_informar' ) ) , array ( 'section_id'        => 'imprime_etiqueta' , 'title'             => __( 'Envío registrado', 'seur' ) , 'description'       => __( 'Impresión de etiqueta', 'seur' ) , 'if'				=> ( $this->Estado_MB == 'imprime_etiqueta' ) ) , array ( 'section_id'        => 'seguimiento' , 'title'             => __( 'Seguimiento', 'seur' ) , 'description'       => $Actualizado , 'if'				=> ( $this->Estado_MB == 'hacer_seguimiento' ) ) , array ( 'section_id'        => 'creando_pedido' , 'title'             => __( 'Se está creando el pedio', 'seur' ) , 'if'				=> ( $this->Estado_MB == 'creando_pedido_nuevo' ) ) , array ( 'section_id'        => 'numero_seguimiento' , 'title'             => __( 'Número seguimiento', 'seur' ) , 'collapsible'   => true , 'if'				=> ( $this->Estado_MB == 'pidiendo_datos' || $this->Estado_MB == 'creando_pedido_nuevo' || $this->Estado_MB == 'hacer_seguimiento' || $this->Estado_MB == 'imprime_etiqueta' )  ) ) ; if ( $this->Estado_MB == 'solo_informar' ) { if( SEUR()->API->getOption('config_ok') == false ) { $permitido_est_seg = __('Para poder usar el plugin de SEUR, primero tiene que configurar este con los datos que le envío su comercial', 'seur') . '<br><br>' . '<a href="/wp-admin/admin.php?page=seur_configuracion">'. __('Configuración del plugin','seur') . '</a>' ; } else { $permitido_est_seg = __('Se permite crear envíos cuando el pedido está en los siguientes estados:', 'seur') . '<br><br>' ; $permite_status = SEUR()->API->getOption('woocommerce','estados_crea_envio', array('0' => 'wc-processing') ) ; foreach($permite_status  as $status ) { $permitido_est_seg .= '<b>' . wc_get_order_status_name( $status ) . '</b><br>' ;  } $permitido_est_seg .= '<hr>' . __('Se sincronizará con SEUR mientras los envíos estén en los siguientes estados:', 'seur') . '<br><br>' ; $sincro_status = SEUR()->API->getOption('woocommerce','estados_sincroniza', array('0' => 'wc-processing')) ; foreach( $sincro_status as $status ) { $permitido_est_seg .= '<b>' . wc_get_order_status_name( $status ) . '</b><br>' ;  } $permitido_est_seg .= '<hr>' . __('Se permite ver el seguimiento de envíos cuando el pedido está en los siguientes estados:', 'seur') . '<br><br>' ; $Seg_envio = SEUR()->API->getOption('woocommerce','estados_ver_seguimiento', array()) ; foreach( $Seg_envio as $status ) { $permitido_est_seg .= '<b>' . wc_get_order_status_name( $status ) . '</b><br>' ;  } $permitido_est_seg = apply_filters( 'SEUR_Explica_Estados_Auto_Metabox' , $permitido_est_seg ) ;  } $this->addSettingFields( 'solo_informar' , array ( 'field_id'      => 'informar' , 'type'          => 'informar' , 'description'   => '<hr>' . $permitido_est_seg . '<hr>' , 'save'  		=> false , 'value'  		=> '<a target="_blank" href="http://www.seur.com/contenido/oferta-general/seur-ecommerce.html">
<img src="http://www.seur.com/img/es/bt_home_seurecommerce.png" style="width: 200px; height: auto;" title="SEUR e-commerce">
</a><hr>
<a target="_blank" href="http://blog.seur.com/">
<img src="http://blog.seur.com/wp-content/themes/seur2014/img/logo.png" style="background-color:#0063B3; width: 200px; height: auto;" title="Blog de SEUR. Te lo envío por SEUR.">
</a><hr>
<a target="_blank" href="http://www.fundacionseur.com">
<img src="http://www.fundacionseur.com/wp-content/uploads/seur_fundacion_logo_cmyk.jpg" style="width: 200px; height: auto;" title="Fundación seur">
</a>' , 'attributes'        => array ( 'field'    => array ( 'style' => 'width: 100%; text-align: center;' , ) ,  )  ) ) ;  } if ( $this->Estado_MB == 'imprime_etiqueta' ) { $this->addSettingFields( 'imprime_etiqueta' , array ( 'field_id'      => 'etiqueta' , 'type'          => 'etiqueta' , 'description'   => __('Pulse en la imagen y se abrirá un cuadro de diálogo para su impresión', 'seur') , 'save'  		=> false , 'value'  		=> $etiqueta , ) , array ( 'field_id'          => 'cancela_envio' , 'type'              => 'submit' , 'value'             => __( 'Cancelar envío', 'seur' ) , 'description'	=> __('Este procedimiento cancela el pedido en su web, pero NO cancela el envío en SEUR, llame a su atención al cliente de SEUR para que cancele el envío despues de cancelarlo aquí.','seur') , 'label_min_width'   => '100%' , 'attributes'        => array ( 'field'    => array ( 'style' => 'width: 100%; text-align: center;' , ) ,  )  ) ) ;  } $this->addSettingFields( 'numero_seguimiento' , array ( 'field_id'      	=> 'Num_Seguimiento' , 'title'         	=> __( 'Nº Seguimiento', 'seur' ) , 'type'          	=> 'number' , 'default'			=> '' , 'description'	=> __('Nº de seguimiento del envío para sincronizar por este, útil para envíos duplicados o creados por otros medios, si pone un número de seguimiento la configuración del envío se reiniciará con este.','seur') ,  ) ) ; if ( $this->Estado_MB == 'creando_pedido_nuevo' ) { $this->addSettingFields( 'creando_pedido' , array ( 'field_id'      => 'creando' , 'type'          => 'creando' , 'description'         => __('Creando pedido, una vez tengamos un número de pedido podremos crear un envío.', 'seur') , 'save'  		=> false ) ) ;  } if( $this->Estado_MB == 'hacer_seguimiento' ) { $this->addSettingFields( 'seguimiento' , array ( 'field_id'      => 'seguimiento' , 'type'          => 'seguimiento' , 'title'         => __( 'Datos del envío', 'seur' ) , 'value'  		=> $Seguimiento , 'save'  		=> false , 'attributes'        => array ( 'field'    => array ( 'style' => 'width: 100%;' , ) ,  )  ) ) ; if($show_alba) { $this->addSettingFields( 'seguimiento' , array ( 'field_id'      => 'albaran' , 'type'          => 'albaran' , 'title'         => __( 'Albarán de entrega', 'seur' ) , 'value'  		=> $albaran , 'save'  		=> false , 'attributes'        => array ( 'field'    => array ( 'style' => 'width: 100%;' , ) ,  )  ) ) ;  }  } if ( $this->Estado_MB == 'pidiendo_datos' ) { switch ($datos['key_tipo_envio']) { case 'nacional' : $tarifas = SEUR()->SOAP->Envios_array(1) ; break ; case 'canarias' : $tarifas = SEUR()->SOAP->Envios_array(2) ; break ; case 'internacional' : $tarifas = SEUR()->SOAP->Envios_array(3) ; break ;  } $this->addSettingFields( 'pidiendo_datos' , array ( 'field_id'      => 'datos_envio' , 'type'          => 'datos' , 'title'         => __('Datos de dirección', 'seur') , 'value'  		=> $envio , 'attributes'        => array ( 'field'    => array ( 'style' => 'font-size: 13px;' , ) ,  ) ) , array ( 'field_id'      => 'Tarifa' , 'title'         => __( 'Tarifa', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => $tarifas , 'default'		=> SEUR()->API->getOption('servicios', $datos['key_tipo_envio'] ) , ) , array ( 'field_id'      => 'cargo_portes' , 'title'         => __( 'Portes', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => $check['tipo_cargo_portes'] , 'default'		=> 'F' , ) , array ( 'field_id'      => 'bultos' , 'title'         => __( 'Bultos', 'seur' ) , 'type'          => 'number' , 'default'			=> 1 , 'attributes'    => array ( 'min'   => 1 , 'step'  => 1 , ) , ) , array ( 'field_id'      => 'kilos' , 'title'         => __( 'Kilos', 'seur' ) , 'type'          => 'number' , 'default'			=> 1 , 'attributes'    => array ( 'min'   => 0.1 , 'step'  => 0.1 , ) , 'description'	=> '<hr>' ,  ) ) ; if( $check['cargos_aduanas'] ) { $this->addSettingFields( 'pidiendo_datos' , array ( 'field_id'      => 'aduana_origen' , 'title'         => __( 'Aduana origen', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('F' => 'Pagada', 'D' => 'Debida') , 'default'		=> SEUR()->API->getOption('servicios', 'aduana_origen', 'P' ) ) , array ( 'field_id'      => 'aduana_destino' , 'title'         => __( 'Aduana destino', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('F' => 'Pagada', 'D' => 'Debida') , 'default'		=> SEUR()->API->getOption('servicios', 'aduana_destino', 'P' ) ) , array ( 'field_id'      => 'Tipo_mercancia_aduana' , 'title'         => __( 'Tipo de mercancia', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => array('C' => 'Comercial', 'N' => 'No comercial') , 'default'		=> SEUR()->API->getOption('servicios', 'Tipo_mercancia', 'C' ) ) , array ( 'field_id'      => 'valor_declarado_aduana' , 'title'         => __( 'Valor declarado', 'seur' ) , 'type'          => 'number' , 'attributes'    => array ( 'min'   => 1 , 'step'  => 0.01 , ) , 'default'		=> SEUR()->API->getOption('servicios', 'valor_declarado_defecto', '1') , 'description'	=> '<hr>' ,  ) ) ;  } if ( $this->pedido->_payment_method == 'cod' ) { $this->addSettingFields( 'pidiendo_datos' , array ( 'field_id'      => 'contra_reembolso' , 'title'         => __( 'Cargo reembolso', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => $check['tipos_reembolso'] , 'default'		=> 'F' )  , array ( 'field_id'      => 'valor_reembolso' , 'title'         => __( 'Valor del reembolso', 'seur' ) , 'type'          => 'number' , 'default'		=>  $this->pedido->_order_total , 'description'	=> '<hr>' , 'attributes'    => array ( 'min'   => 0 , 'step'  => 0.01 , ) ,  ) ) ;  } if( $check['get_entrega_sabado'] ) { $this->addSettingFields( 'pidiendo_datos' , array ( 'field_id'      => 'entrega_sabado' , 'title'         => __( 'Entregar Sabado', 'seur' ) , 'type'          => 'select' , 'is_multiple'   => false , 'label'         => $check['entrega_sabado'] , 'default'		=> 'N' , 'description'	=> __('Hoy es viernes, indique si quiere que el paquete se entregue sabado, si su decisión es NO, sera entregado el siguiente día laboral.','seur') ,  ) ) ;  } $this->addSettingFields( 'pidiendo_datos' , array ( 'field_id'      => 'nota_cliente' , 'title'         => __( 'Nota del cliente', 'seur' ) , 'type'          => 'textarea' , 'default'		=>  ( version_compare( WC_VERSION, '2.7', '<' ) ) ? $this->pedido->customer_note : $this->pedido->get_customer_note() , 'description'	=> '<hr>' ,  ) ) ; if ( $datos['valido'] ) { if ( isset($this->pedido->pidiendo_datos['confirma_envio']) && $this->pedido->pidiendo_datos['confirma_envio'] ) { $this->addSettingFields( 'pidiendo_datos' , array ( 'field_id'          => 'envio_confirmado' , 'type'              => 'submit' , 'value'             => __( 'Confirmar envío', 'seur' ) , 'label_min_width'   => '100%' , 'attributes'        => array ( 'field'    => array ( 'style' => 'width: 100%; text-align: center; ' , ) ,  ) ) , array ( 'field_id'          => 'confirma_envio' , 'type'              => 'hiden' , 'description'		=> __('En el momento que pulse la gestión con SEUR sera completa, revise detenidamente los datos a introducir antes de crear el envío.','seur') , 'value'				=> false ) ) ; } else { $this->addSettingFields( 'pidiendo_datos' , array ( 'field_id'          => 'crea_envio' , 'type'              => 'submit' , 'value'             => __( 'Crear envío', 'seur' ) , 'label_min_width'   => '100%' , 'attributes'        => array ( 'field'    => array ( 'style' => 'width: 100%; text-align: center;' , ) ,  )  ) ) ;  } } else { $this->addSettingFields( 'pidiendo_datos' , array ( 'field_id'          => 'revisar' , 'type'              => 'revisar' , 'value'             => __( 'ERROR', 'seur' ) , 'description'	=> __('Se han encontrado errores y no se puede crear el envío.','seur') , 'label_min_width'   => '100%' , 'attributes'        => array ( 'field'    => array ( 'style' => 'color: #E53920;font-weight: bold;width: 100%; text-align: center;' , ) ,  )  ) ) ;  }  } add_filter( 'validation_SEUR_Orders_Metabox', array( $this, 'validar_datos' ), 10, 3  ) ;  } public function content( $sContent ) { return   $sContent ;  } public function validar_datos ( $aInput, $aOldInput, $oFactory) { SEUR()->API->Is_Config_Ok() ; global $post ; $_fIsValid = true ; $_aErrors = array() ; $_return_old_inputs = false ; $rev_campos ='' ; if ( isset($aInput['imprime_etiqueta']['cancela_envio']) ) { unset($aInput['imprime_etiqueta']) ; $Seur_envio = get_post_meta($post->ID, 'SEUR_envio', true ); ; unset($Seur_envio['creado']) ; unset($Seur_envio['referencia']) ; unset($Seur_envio['ECB']) ; unset($Seur_envio['etiqueta_tipo']) ; unset($Seur_envio['etiqueta']) ; update_post_meta($post->ID, 'SEUR_envio', $Seur_envio ) ; delete_post_meta($post->ID, 'SEUR') ; do_action ( 'SEUR_cambia_estado_pedido' , $post->ID , 'paqueteria' ) ; $oFactory->setSettingNotice( '<b>SEUR: ' . __('Envío cancelado, acuérdese de ordenar la cancelación del envío a SEUR con la referencia:','seur') . ' ' . $post->ID . '</b>' ) ;  } if ( isset($aInput['numero_seguimiento']['Num_Seguimiento']) && $aInput['numero_seguimiento']['Num_Seguimiento'] != 0 ) { $aInput['SEUR'] = array() ; $aInput['SEUR']['EXPEDICION_NUM'] = (int)$aInput['numero_seguimiento']['Num_Seguimiento'] ; $aInput['SEUR']['DESCRIPCION_PARA_CLIENTE'] = 'Esperando datos de SEUR.' ; SEUR()->API->delTransient('SEG_PEDIDO_'. $post->ID) ; unset($aInput['numero_seguimiento']) ;  } if ( isset($aInput['pidiendo_datos']['crea_envio']) ) { $aInput['pidiendo_datos']['confirma_envio'] = true ; $oFactory->setSettingNotice( '<b>SEUR: ' . __('Por favor, confirme el envío de datos a SEUR, esta acción es irreversible.','seur') . ' ' . $post->ID . '</b>' ) ;  } if ( isset($aInput['pidiendo_datos']['crea_envio']) && isset($aInput['pidiendo_datos']['confirma_envio']) ) { unset($aInput['pidiendo_datos']['crea_envio']) ;  } if ( isset($aInput['pidiendo_datos']['envio_confirmado']) ) { unset($aInput['pidiendo_datos']['confirma_envio']) ; unset($aInput['pidiendo_datos']['envio_confirmado']) ; if ( ( $Creado = SEUR()->SOAP->CrearEnvio( $post->ID, $aInput['pidiendo_datos'] ) ) === true ) { delete_post_meta($post->ID, 'SEUR') ; $oFactory->setSettingNotice( $rev_campos .'<b>Se ha creado el envío con éxito.</b>' ) ; } else { $oFactory->setSettingNotice( $Creado ) ;  }  } if ( !$_fIsValid ) { $oFactory->setFieldErrors( $_aErrors ) ; $oFactory->setSettingNotice( __( 'Se han producido errores, por favor, revise los siguientes datos:', 'seur' ) . $rev_campos) ; if($_return_old_inputs) return $aOldInput ;  } return $aInput ;  } private function saveFile($file_out, $cont) { $Path_info = pathinfo($file_out) ; $Path = $Path_info['dirname'] ; if(!is_dir($Path) && !@mkdir($Path, 0755, true) ) return false ; $fp = fopen($file_out, 'w') ; if($fp !== false && flock($fp, LOCK_EX)) { if (fwrite($fp, $cont) !== false ) { fclose($fp) ; chmod($file_out, 0644) ; return true ; } else { fclose($fp) ; return false ;  } } else { return false ;  }  }  } new SEUR_Orders_Metabox ( null,       'SEUR - DPDgroup' , 	    array( 'post_type' => 'shop_order'), 												    'side',																				    'high' )  ; 