<?php
class SEUR_manifiestos { public $sClassName = 'SEUR_admin' ; public $sPageSlug   = 'seur_manifiestos' ; public $sTabSecID    = 'manifiestos' ; public function __construct( $sClassName='', $sPageSlug='', $sTabSecID='' ) { $this->sClassName   = $sClassName ? $sClassName : $this->sClassName ; $this->sPageSlug    = $sPageSlug ? $sPageSlug : $this->sPageSlug ; $this->sTabSecID     = $sTabSecID ? $sTabSecID : $this->sTabSecID ; add_action( 'load_' . $this->sPageSlug, array( $this, 'Load_Event' ) ) ; add_action( 'do_' . $this->sPageSlug , array( $this, 'Do_Event' ) ) ; return $this ;  } public function Load_Event( $oAdminPage ) { SEUR()->API->Is_Config_Ok() ; if( SEUR()->API->getOption('manifiestos', 'fecha_manifiesto' ) !== false ) { $pdf = base64_decode(SEUR()->API->getOption('manifiestos', 'pdf' )) ; $Show_mani = '' ; $manifiesto_obj = '' ; $nombrefile = "manifiesto_" . date('Y-m-d_H-i-s', SEUR()->API->getOption('manifiestos', 'fecha_manifiesto' )) . ".pdf" ; $ruta = SEUR()->BaseCache . $nombrefile ; if( $this->saveFile($ruta , $pdf) ) { $url = get_home_url() . '/wp-content/cache/seur/'. $nombrefile ; $manifiesto_obj =  '<object type="application/pdf" data="' . $url . '#toolbar=1&amp;navpanes=0&amp;scrollbar=1&amp;view=FitH" width="100%" height="800px">
<param name="src" value="' . $url . '#toolbar=1&amp;navpanes=0&amp;scrollbar=1" />
<p><b>' . __('Este navegador no soporta PDFs. Por favor, visualice el PDF desde aquí:', 'xtend') . '</b><a href="' . $url . '"> >> PDF << </a>.</p>
</object>' ; if( date('d-m-Y', SEUR()->API->getOption('manifiestos', 'fecha_manifiesto' )) ==  date('d-m-Y', current_time( 'timestamp' ) )) { $msg = '<p style="color: #000;">' .  __('Hora de descarga','seur'). ': '. date('H:i:s', SEUR()->API->getOption('manifiestos', 'fecha_manifiesto' ) ) . '</p>' ; } else { $msg = '<p style="color: #900;">' . __('EL MANIFIESTO QUE SE MUESTRA NO ES DEL DÍA ACTUAL', 'seur') . '<br/>' . __('Fecha y hora de descarga','seur'). ': '. date('d-m-Y H:i:s', SEUR()->API->getOption('manifiestos', 'fecha_manifiesto' ) ) . '</p>' ;  } } else { $msg = SEUR()->API->div_class ( __('No se pudo guardar el manifiesto en disco.', 'seur'), 'SEUR_Error' ) ;  } $Show_mani 	= 	'<table class="Tabla_SEUR">
<tr bgcolor=#EEEEEE style="text-align: center;font-weight: bold;">
<td>' . $msg .  '</td>
<tr>
</table>' . $manifiesto_obj ; } else { $Show_mani = SEUR()->API->div_class ( __( 'Aún no se ha descargado ningún manifiesto.', 'seur'), 'SEUR_Error' ) ;  } $oAdminPage->addSettingSections( $this->sPageSlug , array ( 'section_id'    	=>  $this->sTabSecID ,       				'title'        		=>  __( 'Descargar manifiesto desde SEUR.', 'seur' ) , 'section_tab_slug'  => 'tabbed_manifiesto_1' , 'description'  		=> 	__( 'Si no tiene envíos creados de otros días, no es necesario introducir valores de fecha.','seur') . '<br>' . __( 'Si ha creado envíos en días anteriores no recogidos por SEUR, deberá indicar la fecha más lejana.','seur') . '<br>' . __( 'Por ejemplo: Si SEUR le recogió un viernes y fue creando envíos viernes después de la recogida de SEUR, sábado, domingo y lunes, el lunes deberá pedir manifiesto con la fecha de viernes.','seur') . '<hr>' ) ) ; $oAdminPage->addSettingFields(	$this->sTabSecID , array ( 'field_id'      => 'fecha' , 'title'         => __( 'Fecha', 'seur' ) , 'type'          => 'date' , 'description'	=> __('Se admite cualquier tipo de fecha legible, 1-2-2016, 2016/12/30, 01-10-2016...., ','seur' ) ) , array ( 'field_id'      => 'submit' , 'type'          => 'submit' , 'label'         => __( 'Descargar manifiesto', 'seur' ) , 'save'			=> false , ) , array ( 'field_id'      => 'result' , 'type'          => 'html' , 'title'         => __( 'Manifiesto:', 'seur' ) , 'value'			=> $Show_mani , 'attributes'    => array ( 'style' => 'width: 100%' )  ) ) ; add_filter( 'validation_' . $this->sPageSlug, array( $this, 'Validate' ), 10, 3  ) ;  } public function Do_Event ($content) { return  $content ;  } public function Validate( $aInput, $aOldInput, $oFactory) { $_fIsValid = true ; $_aErrors = array() ; $_return_old_inputs = false ; $rev_campos ='' ; $fecha = strtotime($aInput['manifiestos']['fecha']) ; if ( $fecha != '' ) {  } if( $_fIsValid ) { $comm_ok = true ; try { $soap_client = new SoapClient('http://cit.seur.com/CIT-war/services/DetalleBultoPDFWebService?wsdl', array('connection_timeout' => 30)) ; $Opc_acceso = SEUR()->API->getOption('acceso') ; $Opc_direccion = SEUR()->API->getOption('direccion') ; if ( $aInput['manifiestos']['fecha'] != '' ) { $fecha = date("Y-m-d", $fecha) . 'T00:00:00:000Z' ; $parametros = array ( 'in0'	=>	$Opc_direccion['nif'] , 'in1'	=> 	$Opc_acceso['franquicia'] , 'in2'	=>	$fecha , 'in3'	=>	$Opc_acceso['usuario_cit'] , 'in4'	=>	$Opc_acceso['clave_cit'][0] )  ; $respuesta = $soap_client->generacionPDFDetallePorFecha($parametros) ; } else { $parametros = array ( 'in0'	=>	$Opc_direccion['nif'] , 'in1'	=> 	$Opc_acceso['franquicia'] , 'in2'	=>	"S", 										'in3'	=>	$Opc_acceso['usuario_cit'] , 'in4'	=>	$Opc_acceso['clave_cit'][0] )  ; $respuesta = $soap_client->generacionPDFDetalleNoFechaSepCCC($parametros) ;  } } catch (Exception $e) { $oFactory->setSettingNotice( SEUR()->SOAP->Soap_fault($e)) ; $comm_ok = false ;  } if ( $comm_ok ) { if ( strpos($respuesta->out, "USUARIO") != 0 || strpos($respuesta->out, "RECUPERAR") != 0 ) { $oFactory->setSettingNotice( SEUR()->API->div_class ( $respuesta->out, 'SEUR_Error' )) ; } else { $aInput['manifiestos'] = array() ; $aInput['manifiestos']['fecha_manifiesto'] = current_time( 'timestamp' ) ; $aInput['manifiestos']['pdf'] =  $respuesta->out ;  }  }  } if ( !$_fIsValid ) { $oFactory->setFieldErrors( $_aErrors ) ; $oFactory->setSettingNotice( SEUR()->API->div_class ( __( 'Se han producido errores en la introducción de datos, por favor, revise los datos introducidos en:', 'seur' ) ) . $rev_campos ,  'SEUR_Error' ) ; if($_return_old_inputs) return $aOldInput ;  } return $aInput ;  } private function saveFile($file_out, $cont) { $Path_info = pathinfo($file_out) ; $Path = $Path_info['dirname'] ; if(!is_dir($Path) && !@mkdir($Path, 0755, true) ) return false ; $fp = fopen($file_out, 'w') ; if($fp !== false && flock($fp, LOCK_EX)) { if (fwrite($fp, $cont) !== false ) { fclose($fp) ; chmod($file_out, 0644) ; return true ; } else { fclose($fp) ; return false ;  } } else { return false ;  }  }  } new SEUR_manifiestos() ; ?>
